name: build

on:
    push:
    pull_request:
        branches: [main]

jobs: 
    build:
      runs-on: ${{ matrix.os }}
      strategy:
        matrix:
          os: [ubuntu-latest, windows-latest]
          python-version: [3.8, 3.9]
      env:
          USING_COVERAGE: "3.9"

      steps:
          - name: Checkout sources
            uses: actions/checkout@v2

          - name: Set up Python v ${{ matrix.python-version }}
            uses: actions/setup-python@v2
            with:
                python-version: ${{ matrix.python-version }}


          - name: Install Poetry
            run: pip install poetry


          - name: Load cached venv
            id: cached-poetry-dependencies
            uses: actions/cache@v2
            with:
              path: .venv
              key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

          - name: Install dependencies
            if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
            run: poetry install --no-interaction


          - name: Run tox
            run: |
                poetry run python -m tox

          - name: Generate Coverage Report
            run: |
              coverage run -m spyc.spyc

          - name: "Upload coverage to Codecov"
            uses: codecov/codecov-action@v1
            if: contains(env.USING_COVERAGE, matrix.python-version)
            with:
              token: ${{ secrets.CODECOV_TOKEN }} 
              fail_ci_if_error: true
