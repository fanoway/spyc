name: build

on:
    push:
    pull_request:
        branches: [main]

jobs: 
    build:
      runs-on: ubuntu-latest
      strategy:
        matrix:
          python-version: [3.9]
      env:
          USING_COVERAGE: "3.9"

      steps:
          - name: Checkout sources
            uses: actions/checkout@v2

          - name: Set up Python v ${{ matrix.python-version }}
            uses: actions/setup-python@v2
            with:
                python-version: ${{ matrix.python-version }}

          - name: Install Poetry
            uses: snok/install-poetry@v1.1.6

          - name: Configure poetry
            run: poetry config virtualenvs.in-project true

          - name: Set up cache
            uses: actions/cache@v1
            id: cache
            with:
              path: .venv
              key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}
          
          - name: Ensure cache is healthy
            if: steps.cache.outputs.cache-hit == 'true'
            run: poetry run pip --version >/dev/null 2>&1 || rm -rf .venv
          
          - name: Install Dependencies
            run: poetry install

          - name: Run tox and build
            run: |
                make build

          - name: Generate Coverage Report
            run: |
              coverage run -m spyc.spyc

          - name: "Upload coverage to Codecov"
            uses: codecov/codecov-action@v1
            if: contains(env.USING_COVERAGE, matrix.python-version)
            with:
              token: ${{ secrets.CODECOV_TOKEN }} 
              fail_ci_if_error: true